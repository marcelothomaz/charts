{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/constants.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/colors.js","../../../src/js/utils/draw.js","../../../src/js/utils/animate.js","../../../src/js/utils/animation.js","../../../src/js/utils/export.js","../../../src/js/utils/date-utils.js","../../../src/js/objects/ChartComponents.js","../../../src/js/utils/intervals.js","../../../src/js/utils/axis-chart-utils.js","../../../src/js/chart.js","../../../node_modules/style-inject/dist/style-inject.es.js","../../../src/js/objects/SvgTip.js","../../../src/css/chartsCss.js","../../../src/js/charts/BaseChart.js","../../../src/js/charts/AggregationChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js","../../../src/js/charts/AxisChart.js","../../../src/js/charts/DonutChart.js","../../../src/js/index.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr, truncateString } from './draw-utils'\nimport { getStringWidth } from './helpers'\nimport {\n   DOT_OVERLAY_SIZE_INCR,\n   PERCENTAGE_BAR_DEFAULT_DEPTH,\n} from './constants'\nimport { lightenDarkenColor } from './colors'\n\nexport const AXIS_TICK_LENGTH = 6\nconst LABEL_MARGIN = 4\nconst LABEL_MAX_CHARS = 15\nexport const FONT_SIZE = 10\nconst BASE_LINE_COLOR = '#dadada'\nconst FONT_FILL = '#555b51'\n\nfunction $(expr, con) {\n   return typeof expr === 'string'\n      ? (con || document).querySelector(expr)\n      : expr || null\n}\n\nexport function createSVG(tag, o) {\n   var element = document.createElementNS('http://www.w3.org/2000/svg', tag)\n\n   for (var i in o) {\n      var val = o[i]\n\n      if (i === 'inside') {\n         $(val).appendChild(element)\n      } else if (i === 'around') {\n         var ref = $(val)\n         ref.parentNode.insertBefore(element, ref)\n         element.appendChild(ref)\n      } else if (i === 'styles') {\n         if (typeof val === 'object') {\n            Object.keys(val).map(prop => {\n               element.style[prop] = val[prop]\n            })\n         }\n      } else {\n         if (i === 'className') {\n            i = 'class'\n         }\n         if (i === 'innerHTML') {\n            element['textContent'] = val\n         } else {\n            element.setAttribute(i, val)\n         }\n      }\n   }\n\n   return element\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n   return createSVG('linearGradient', {\n      inside: svgDefElem,\n      id: gradientId,\n      x1: 0,\n      x2: 0,\n      y1: 0,\n      y2: 1,\n   })\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n   return createSVG('stop', {\n      inside: gradElem,\n      style: `stop-color: ${color}`,\n      offset: offset,\n      'stop-opacity': opacity,\n   })\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n   return createSVG('svg', {\n      className: className,\n      inside: parent,\n      width: width,\n      height: height,\n   })\n}\n\nexport function makeSVGDefs(svgContainer) {\n   return createSVG('defs', {\n      inside: svgContainer,\n   })\n}\n\nexport function makeSVGGroup(className, transform = '', parent = undefined) {\n   let args = {\n      className: className,\n      transform: transform,\n   }\n   if (parent) args.inside = parent\n   return createSVG('g', args)\n}\n\nexport function wrapInSVGGroup(elements, className = '') {\n   let g = createSVG('g', {\n      className: className,\n   })\n   elements.forEach(e => g.appendChild(e))\n   return g\n}\n\nexport function makePath(\n   pathStr,\n   className = '',\n   stroke = 'none',\n   fill = 'none',\n   strokeWidth = 2,\n) {\n   return createSVG('path', {\n      className: className,\n      d: pathStr,\n      styles: {\n         stroke: stroke,\n         fill: fill,\n         'stroke-width': strokeWidth,\n      },\n   })\n}\n\nexport function makeArcPathStr(\n   startPosition,\n   endPosition,\n   center,\n   radius,\n   clockWise = 1,\n   largeArc = 0,\n) {\n   let [arcStartX, arcStartY] = [\n      center.x + startPosition.x,\n      center.y + startPosition.y,\n   ]\n   let [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y]\n   return `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`\n}\n\nexport function makeArcStrokePathStr(\n   startPosition,\n   endPosition,\n   center,\n   radius,\n   clockWise = 1,\n   largeArc = 0,\n) {\n   let [arcStartX, arcStartY] = [\n      center.x + startPosition.x,\n      center.y + startPosition.y,\n   ]\n   let [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y]\n\n   return `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n   let gradientId =\n      'path-fill-gradient' +\n      '-' +\n      color +\n      '-' +\n      (lighter ? 'lighter' : 'default')\n   let gradientDef = renderVerticalGradient(svgDefElem, gradientId)\n   let opacities = [1, 0.6, 0.2]\n   if (lighter) {\n      opacities = [0.4, 0.2, 0]\n   }\n\n   setGradientStop(gradientDef, '0%', color, opacities[0])\n   setGradientStop(gradientDef, '50%', color, opacities[1])\n   setGradientStop(gradientDef, '100%', color, opacities[2])\n\n   return gradientId\n}\n\nexport function percentageBar(\n   x,\n   y,\n   width,\n   height,\n   depth = PERCENTAGE_BAR_DEFAULT_DEPTH,\n   fill = 'none',\n) {\n   let args = {\n      className: 'percentage-bar',\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      fill: fill,\n      styles: {\n         stroke: lightenDarkenColor(fill, -25),\n         // Diabolically good: https://stackoverflow.com/a/9000859\n         // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n         'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n         'stroke-width': depth,\n      },\n   }\n\n   return createSVG('rect', args)\n}\n\nexport function heatSquare(className, x, y, size, fill = 'none', data = {}) {\n   let args = {\n      className: className,\n      x: x,\n      y: y,\n      width: size,\n      height: size,\n      fill: fill,\n   }\n\n   Object.keys(data).map(key => {\n      args[key] = data[key]\n   })\n\n   return createSVG('rect', args)\n}\n\nexport function legendBar(x, y, size, fill = 'none', label, truncate = false) {\n   label = truncate ? truncateString(label, LABEL_MAX_CHARS) : label\n\n   let args = {\n      className: 'legend-bar',\n      x: 0,\n      y: 0,\n      width: size,\n      height: '2px',\n      fill: fill,\n   }\n   let text = createSVG('text', {\n      className: 'legend-dataset-text',\n      x: 0,\n      y: 0,\n      dy: FONT_SIZE * 2 + 'px',\n      'font-size': FONT_SIZE * 1.2 + 'px',\n      'text-anchor': 'start',\n      fill: FONT_FILL,\n      innerHTML: label,\n   })\n\n   let group = createSVG('g', {\n      transform: `translate(${x}, ${y})`,\n   })\n   group.appendChild(createSVG('rect', args))\n   group.appendChild(text)\n\n   return group\n}\n\nexport function legendDot(x, y, size, fill = 'none', label) {\n   let args = {\n      className: 'legend-dot',\n      cx: 0,\n      cy: 0,\n      r: size,\n      fill: fill,\n   }\n   let text = createSVG('text', {\n      className: 'legend-dataset-text',\n      x: 0,\n      y: 0,\n      dx: FONT_SIZE + 'px',\n      dy: FONT_SIZE / 3 + 'px',\n      'font-size': FONT_SIZE * 1.2 + 'px',\n      'text-anchor': 'start',\n      fill: FONT_FILL,\n      innerHTML: label,\n   })\n\n   let group = createSVG('g', {\n      transform: `translate(${x}, ${y})`,\n   })\n   group.appendChild(createSVG('circle', args))\n   group.appendChild(text)\n\n   return group\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n   let fontSize = options.fontSize || FONT_SIZE\n   let dy = options.dy !== undefined ? options.dy : fontSize / 2\n   let fill = options.fill || FONT_FILL\n   let textAnchor = options.textAnchor || 'start'\n   let innerHTML = content.split('\\n').map(line =>\n      createSVG('tspan', {\n         dy: '1.3em',\n         fill: fill,\n         'text-anchor': textAnchor,\n         x,\n         y,\n      }),\n   )\n\n   let text = createSVG('text', {\n      className: className,\n      x: x,\n      y: y,\n      dy: dy + 'px',\n      'font-size': fontSize + 'px',\n      fill: fill,\n      'text-anchor': textAnchor,\n      innerHTML: '',\n   })\n\n   innerHTML.forEach(line => text.appendChild(line))\n   return text\n}\n\nfunction makeVertLine(x, label, y1, y2, options = {}) {\n   if (!options.stroke) options.stroke = BASE_LINE_COLOR\n   let l = createSVG('line', {\n      className: 'line-vertical ' + options.className,\n      x1: 0,\n      x2: 0,\n      y1: y1,\n      y2: y2,\n      styles: {\n         stroke: options.stroke,\n      },\n   })\n\n   let text = createSVG('text', {\n      x: 0,\n      y: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n      dy: FONT_SIZE + 'px',\n      'font-size': FONT_SIZE + 'px',\n      'text-anchor': 'middle',\n      innerHTML: label + '',\n   })\n\n   let line = createSVG('g', {\n      transform: `translate(${x}, 0)`,\n   })\n\n   line.appendChild(l)\n   line.appendChild(text)\n\n   return line\n}\n\nfunction makeHoriLine(y, label, x1, x2, options = {}) {\n   if (!options.stroke) options.stroke = BASE_LINE_COLOR\n   if (!options.lineType) options.lineType = ''\n   let className =\n      'line-horizontal ' +\n      options.className +\n      (options.lineType === 'dashed' ? 'dashed' : '')\n\n   let l = createSVG('line', {\n      className: className,\n      x1: x1,\n      x2: x2,\n      y1: 0,\n      y2: 0,\n      styles: {\n         stroke: options.stroke,\n      },\n   })\n\n   let text = createSVG('text', {\n      x: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n      y: 0,\n      dy: FONT_SIZE / 2 - 2 + 'px',\n      'font-size': FONT_SIZE + 'px',\n      'text-anchor': x1 < x2 ? 'end' : 'start',\n      innerHTML: label + '',\n   })\n\n   let line = createSVG('g', {\n      transform: `translate(0, ${y})`,\n      'stroke-opacity': 1,\n   })\n\n   if (text === 0 || text === '0') {\n      line.style.stroke = 'rgba(27, 31, 35, 0.6)'\n   }\n\n   line.appendChild(l)\n   line.appendChild(text)\n\n   return line\n}\n\nexport function yLine(y, label, width, options = {}) {\n   if (!options.pos) options.pos = 'left'\n   if (!options.offset) options.offset = 0\n   if (!options.mode) options.mode = 'span'\n   if (!options.stroke) options.stroke = BASE_LINE_COLOR\n   if (!options.className) options.className = ''\n\n   let x1 = -1 * AXIS_TICK_LENGTH\n   let x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0\n\n   if (options.mode === 'tick' && options.pos === 'right') {\n      x1 = width + AXIS_TICK_LENGTH\n      x2 = width\n   }\n\n   // let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n   x1 += options.offset\n   x2 += options.offset\n\n   return makeHoriLine(y, label, x1, x2, {\n      stroke: options.stroke,\n      className: options.className,\n      lineType: options.lineType,\n   })\n}\n\nexport function xLine(x, label, height, options = {}) {\n   if (!options.pos) options.pos = 'bottom'\n   if (!options.offset) options.offset = 0\n   if (!options.mode) options.mode = 'span'\n   if (!options.stroke) options.stroke = BASE_LINE_COLOR\n   if (!options.className) options.className = ''\n\n   // Draw X axis line in span/tick mode with optional label\n   //                        \ty2(span)\n   // \t\t\t\t\t\t|\n   // \t\t\t\t\t\t|\n   //\t\t\t\tx line\t|\n   //\t\t\t\t\t\t|\n   // \t\t\t\t\t   \t|\n   // ---------------------+-- y2(tick)\n   //\t\t\t\t\t\t|\n   //\t\t\t\t\t\t\ty1\n\n   let y1 = height + AXIS_TICK_LENGTH\n   let y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height\n\n   if (options.mode === 'tick' && options.pos === 'top') {\n      // top axis ticks\n      y1 = -1 * AXIS_TICK_LENGTH\n      y2 = 0\n   }\n\n   return makeVertLine(x, label, y1, y2, {\n      stroke: options.stroke,\n      className: options.className,\n      lineType: options.lineType,\n   })\n}\n\nexport function yMarker(y, label, width, options = {}) {\n   if (!options.labelPos) options.labelPos = 'right'\n   let x =\n      options.labelPos === 'left'\n         ? LABEL_MARGIN\n         : width - getStringWidth(label, 5) - LABEL_MARGIN\n\n   let labelSvg = createSVG('text', {\n      className: 'chart-label',\n      x: x,\n      y: 0,\n      dy: FONT_SIZE / -2 + 'px',\n      'font-size': FONT_SIZE + 'px',\n      'text-anchor': 'start',\n      innerHTML: label + '',\n   })\n\n   let line = makeHoriLine(y, '', 0, width, {\n      stroke: options.stroke || BASE_LINE_COLOR,\n      className: options.className || '',\n      lineType: options.lineType,\n   })\n\n   line.appendChild(labelSvg)\n\n   return line\n}\n\nexport function yRegion(y1, y2, width, label, options = {}) {\n   // return a group\n   let height = y1 - y2\n\n   let rect = createSVG('rect', {\n      className: `bar mini`, // remove class\n      styles: {\n         fill: `rgba(228, 234, 239, 0.49)`,\n         stroke: BASE_LINE_COLOR,\n         'stroke-dasharray': `${width}, ${height}`,\n      },\n      // 'data-point-index': index,\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n   })\n\n   if (!options.labelPos) options.labelPos = 'right'\n   let x =\n      options.labelPos === 'left'\n         ? LABEL_MARGIN\n         : width - getStringWidth(label + '', 4.5) - LABEL_MARGIN\n\n   let labelSvg = createSVG('text', {\n      className: 'chart-label',\n      x: x,\n      y: 0,\n      dy: FONT_SIZE / -2 + 'px',\n      'font-size': FONT_SIZE + 'px',\n      'text-anchor': 'start',\n      innerHTML: label + '',\n   })\n\n   let region = createSVG('g', {\n      transform: `translate(0, ${y2})`,\n   })\n\n   region.appendChild(rect)\n   region.appendChild(labelSvg)\n\n   return region\n}\n\nexport function datasetBar(\n   x,\n   yTop,\n   width,\n   color,\n   label = '',\n   index = 0,\n   offset = 0,\n   meta = {},\n) {\n   let [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine)\n   y -= offset\n\n   if (height === 0) {\n      height = meta.minHeight\n      y -= meta.minHeight\n   }\n\n   let rect = createSVG('rect', {\n      className: `bar mini`,\n      style: `fill: ${color}`,\n      'data-point-index': index,\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n   })\n\n   label += ''\n\n   if (!label && !label.length) {\n      return rect\n   } else {\n      rect.setAttribute('y', 0)\n      rect.setAttribute('x', 0)\n      let text = createSVG('text', {\n         className: 'data-point-value',\n         x: width / 2,\n         y: 0,\n         dy: (FONT_SIZE / 2) * -1 + 'px',\n         'font-size': FONT_SIZE + 'px',\n         'text-anchor': 'middle',\n         innerHTML: label,\n      })\n\n      let group = createSVG('g', {\n         'data-point-index': index,\n         transform: `translate(${x}, ${y})`,\n      })\n      group.appendChild(rect)\n      group.appendChild(text)\n\n      return group\n   }\n}\n\nexport function datasetDot(x, y, radius, color, label = '', index = 0) {\n   let dot = createSVG('circle', {\n      style: `fill: ${color}`,\n      'data-point-index': index,\n      cx: x,\n      cy: y,\n      r: radius,\n   })\n\n   label += ''\n\n   if (!label && !label.length) {\n      return dot\n   } else {\n      dot.setAttribute('cy', 0)\n      dot.setAttribute('cx', 0)\n\n      let text = createSVG('text', {\n         className: 'data-point-value',\n         x: 0,\n         y: 0,\n         dy: (FONT_SIZE / 2) * -1 - radius + 'px',\n         'font-size': FONT_SIZE + 'px',\n         'text-anchor': 'middle',\n         innerHTML: label,\n      })\n\n      let group = createSVG('g', {\n         'data-point-index': index,\n         transform: `translate(${x}, ${y})`,\n      })\n      group.appendChild(dot)\n      group.appendChild(text)\n\n      return group\n   }\n}\n\nexport function getPaths(xList, yList, color, options = {}, meta = {}) {\n   let pointsList = yList.map((y, i) => xList[i] + ',' + y)\n   let pointsStr = pointsList.join('L')\n   let path = makePath('M' + pointsStr, 'line-graph-path', color)\n\n   // HeatLine\n   if (options.heatline) {\n      let gradient_id = makeGradient(meta.svgDefs, color)\n      path.style.stroke = `url(#${gradient_id})`\n   }\n\n   let paths = {\n      path: path,\n   }\n\n   // Region\n   if (options.regionFill) {\n      let gradient_id_region = makeGradient(meta.svgDefs, color, true)\n\n      let pathStr =\n         'M' +\n         `${xList[0]},${meta.zeroLine}L` +\n         pointsStr +\n         `L${xList.slice(-1)[0]},${meta.zeroLine}`\n      paths.region = makePath(\n         pathStr,\n         `region-fill`,\n         'none',\n         `url(#${gradient_id_region})`,\n      )\n   }\n\n   return paths\n}\n\nexport let makeOverlay = {\n   bar: unit => {\n      let transformValue\n      if (unit.nodeName !== 'rect') {\n         transformValue = unit.getAttribute('transform')\n         unit = unit.childNodes[0]\n      }\n      let overlay = unit.cloneNode()\n      overlay.style.fill = '#000000'\n      overlay.style.opacity = '0.4'\n\n      if (transformValue) {\n         overlay.setAttribute('transform', transformValue)\n      }\n      return overlay\n   },\n\n   dot: unit => {\n      let transformValue\n      if (unit.nodeName !== 'circle') {\n         transformValue = unit.getAttribute('transform')\n         unit = unit.childNodes[0]\n      }\n      let overlay = unit.cloneNode()\n      let radius = unit.getAttribute('r')\n      let fill = unit.getAttribute('fill')\n      overlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR)\n      overlay.setAttribute('fill', fill)\n      overlay.style.opacity = '0.6'\n\n      if (transformValue) {\n         overlay.setAttribute('transform', transformValue)\n      }\n      return overlay\n   },\n\n   heat_square: unit => {\n      let transformValue\n      if (unit.nodeName !== 'circle') {\n         transformValue = unit.getAttribute('transform')\n         unit = unit.childNodes[0]\n      }\n      let overlay = unit.cloneNode()\n      let radius = unit.getAttribute('r')\n      let fill = unit.getAttribute('fill')\n      overlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR)\n      overlay.setAttribute('fill', fill)\n      overlay.style.opacity = '0.6'\n\n      if (transformValue) {\n         overlay.setAttribute('transform', transformValue)\n      }\n      return overlay\n   },\n}\n\nexport let updateOverlay = {\n   bar: (unit, overlay) => {\n      let transformValue\n      if (unit.nodeName !== 'rect') {\n         transformValue = unit.getAttribute('transform')\n         unit = unit.childNodes[0]\n      }\n      let attributes = ['x', 'y', 'width', 'height']\n      Object.values(unit.attributes)\n         .filter(attr => attributes.includes(attr.name) && attr.specified)\n         .map(attr => {\n            overlay.setAttribute(attr.name, attr.nodeValue)\n         })\n\n      if (transformValue) {\n         overlay.setAttribute('transform', transformValue)\n      }\n   },\n\n   dot: (unit, overlay) => {\n      let transformValue\n      if (unit.nodeName !== 'circle') {\n         transformValue = unit.getAttribute('transform')\n         unit = unit.childNodes[0]\n      }\n      let attributes = ['cx', 'cy']\n      Object.values(unit.attributes)\n         .filter(attr => attributes.includes(attr.name) && attr.specified)\n         .map(attr => {\n            overlay.setAttribute(attr.name, attr.nodeValue)\n         })\n\n      if (transformValue) {\n         overlay.setAttribute('transform', transformValue)\n      }\n   },\n\n   heat_square: (unit, overlay) => {\n      let transformValue\n      if (unit.nodeName !== 'circle') {\n         transformValue = unit.getAttribute('transform')\n         unit = unit.childNodes[0]\n      }\n      let attributes = ['cx', 'cy']\n      Object.values(unit.attributes)\n         .filter(attr => attributes.includes(attr.name) && attr.specified)\n         .map(attr => {\n            overlay.setAttribute(attr.name, attr.nodeValue)\n         })\n\n      if (transformValue) {\n         overlay.setAttribute('transform', transformValue)\n      }\n   },\n}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine) {\n\tlet pathComponents = [];\n\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y));\n\tlet pathStr = pointsStr.join(\"L\");\n\n\tconst animPath = [paths.path, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t});\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet multiple = Math.ceil(label.length/allowedLetters);\n\t\t\t\tif(i % multiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import '../css/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\n\nlet BOUND_DRAW_FN;\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: 1,\n\t\t\ttruncateLegends: options.truncateLegends || 0\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tBOUND_DRAW_FN = this.boundDrawFn.bind(this);\n\t\twindow.addEventListener('resize', BOUND_DRAW_FN);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn.bind(this));\n\t}\n\n\tboundDrawFn() {\n\t\tthis.draw(true);\n\t}\n\n\tunbindWindowEvents() {\n\t\twindow.removeEventListener('resize', BOUND_DRAW_FN);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn.bind(this));\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { legendDot } from '../utils/draw';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(d[0]);\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 110;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${s.labels[i]}: ${d}`\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tlet dbi = this.dataByIndex[index];\n\n\t\tthis.tip.setValues(\n\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\tdbi.values,\n\t\t\tindex\n\t\t);\n\n\t\tthis.tip.showTip();\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import * as Charts from './chart';\n\nlet frappe     = { };\n\nfrappe.NAME    = 'Frappe Charts';\nfrappe.VERSION = '1.2.0';\n\nfrappe         = Object.assign({ }, frappe, Charts);\n\nexport default frappe;"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","$","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","undefined","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeArcStrokePathStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","key","legendBar","label","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","innerHTML","split","forEach","line","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","l","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","xList","yList","pointsStr","join","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","push","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","a","createElement","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","firstChild","container","treatAsUtc","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getTime","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","isNaN","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","reduce","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","getChartByType","AxisChart","chartTypes","error","css","insertAt","head","getElementsByTagName","styleSheet","cssText","createTextNode","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","PI","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BOUND_DRAW_FN","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","warn","boundDrawFn","bind","draw","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","c","_this","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","animate","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this3","event","keyCode","chartSvg","AggregationChart","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this4","_this5","newOptions","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","ROW_HEIGHT","HEATMAP_SQUARE_SIZE","spacing","noOfWeeks","setFullYear","dataPoints","points","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","COL_WIDTH","moreText","HEATMAP_DISTRIBUTION_SIZE","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","tooltipOptions","xAxisMode","yAxisMode","xIsSeries","formatTooltipX","formatTooltipY","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","p","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","DonutChart","Chart","frappe","NAME","VERSION","Charts"],"mappings":"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"}